# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: AzureKeyVaultExtension-v0.$(date:yy)$(DayOfYear).$(rev:r)-$(Build.SourceBranchName)
trigger:
- master
- issue*

pool:
  name: MacNetCorePools
  demands: npm

#Your build pipeline references an undefined variable named ‘versionExtractor.fullVersion’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972

steps:
- task: VersionExtractor@4
  name: versionExtractor
  displayName: 'Version extractor digit'
  inputs:
    stringToAnalyze: '$(Build.BuildNumber)'

- task: TfxInstaller@2
  displayName: 'Use Node CLI for Azure DevOps (tfx-cli): v0.6.x'

- task: Npm@1
  displayName: 'TypeScript install'
  inputs:
    command: custom
    workingDir: UploadMultipleAzureKeyVaultSecrets
    verbose: false
    customCommand: 'install -g typescript'

- task: Npm@1
  displayName: 'npm install ManageKeyVaultSecrets'
  inputs:
    command: custom
    workingDir: UploadMultipleAzureKeyVaultSecrets
    verbose: false
    customCommand: 'run publishExt'

- task: Npm@1
  displayName: 'npm install ManageKeyVaultSingleSecret'
  inputs:
    command: custom
    workingDir: CreateUpdateKeyVaultSecret
    verbose: false
    customCommand: 'run publishExt'

- task: PackageAzureDevOpsExtension@2
  displayName: 'Package Extension: '
  inputs:
    extensionVersion: '$(versionExtractor.fullVersion)'
    updateTasksVersion: true

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '*.vsix'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

